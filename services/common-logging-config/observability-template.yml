# Common observability configuration template for all services
# Add this section to all microservice application.yml files

# Management endpoints with full observability
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,circuitbreakers,circuitbreakerevents,env,configprops
  endpoint:
    health:
      show-details: always
      show-components: always
  tracing:
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        enabled: true
  otlp:
    tracing:
      endpoint: ${JAEGER_OTLP_ENDPOINT:http://localhost:4317}

# Circuit Breaker Configuration for Resilience4j
resilience4j:
  circuitbreaker:
    instances:
      default:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
      emailService:
        register-health-indicator: true
        sliding-window-size: 15
        minimum-number-of-calls: 5
        failure-rate-threshold: 60
        wait-duration-in-open-state: 10s
      databaseService:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
  retry:
    instances:
      default:
        max-attempts: 3
        wait-duration: 100ms
        exponential-backoff-multiplier: 2
      emailService:
        max-attempts: 2
        wait-duration: 200ms
      databaseService:
        max-attempts: 3
        wait-duration: 50ms
  timelimiter:
    instances:
      default:
        timeout-duration: 3s
      emailService:
        timeout-duration: 5s
      databaseService:
        timeout-duration: 2s

# Logging configuration with Splunk and structured logging
logging:
  level:
    '[com.fintech]': ${LOG_LEVEL:DEBUG}
    '[io.github.resilience4j]': DEBUG
    '[org.springframework.web]': DEBUG
    '[org.springframework.amqp]': DEBUG
    '[org.springframework.data]': DEBUG
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  config: classpath:logback-spring.xml

# Environment variable configuration
environment:
  service:
    name: ${spring.application.name}
    version: ${SERVICE_VERSION:1.0.0}
    environment: ${ENVIRONMENT:development}

# Distributed tracing configuration
spring:
  application:
    name: ${SERVICE_NAME:unknown-service}
  zipkin:
    base-url: ${JAEGER_ZIPKIN_ENDPOINT:http://localhost:9411}
  sleuth:
    opentracing:
      jaeger:
        http-sender:
          url: ${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
