spring.application.name=ledger-service

snowflake.machine-id=3

#
## Database Configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/fintech_ledger
#spring.datasource.username=fintech_user
#spring.datasource.password=fintech_password
#spring.datasource.driver-class-name=org.postgresql.Driver
#
## JPA Configuration
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#
## Kafka Configuration
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=ledger-service-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#
## RabbitMQ Configuration
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#
## Snowflake ID Configuration
#
## Management and Monitoring
#management.endpoints.web.exposure.include=health,info,metrics,prometheus
#management.endpoint.health.show-details=always
#management.metrics.export.prometheus.enabled=true
#
## Logging
#logging.level.com.fintech.ledgerservice=INFO
#logging.level.org.springframework.kafka=WARN
#logging.level.org.hibernate.SQL=WARN
