{"@timestamp":"2025-08-03T15:50:46.6808319+05:30","level":"INFO","logger_name":"com.fintech.authservice.AuthServiceApplication","message":"Starting AuthServiceApplication using Java 17.0.11 with PID 27776 (C:\\spring-boot\\fintech-project\\services\\auth-service\\build\\classes\\java\\main started by aggar in C:\\spring-boot\\fintech-project)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:46.6998672+05:30","level":"DEBUG","logger_name":"com.fintech.authservice.AuthServiceApplication","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:46.7008986+05:30","level":"INFO","logger_name":"com.fintech.authservice.AuthServiceApplication","message":"The following 1 profile is active: \"dev\"","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:46.724274+05:30","level":"INFO","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","message":"Fetching config from server at : http://localhost:8888/","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:46.7248+05:30","level":"INFO","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","message":"Located environment: name=auth-service, profiles=[default], label=null, version=null, state=null","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:46.7248+05:30","level":"INFO","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","message":"Fetching config from server at : http://localhost:8888/","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:46.7254143+05:30","level":"INFO","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","message":"Located environment: name=auth-service, profiles=[dev], label=null, version=null, state=null","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.4846065+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.4885463+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.6133728+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 114 ms. Found 4 JPA repository interfaces.","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.6230011+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.6239329+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.6549365+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fintech.authservice.repository.AuthUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.6559366+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fintech.authservice.repository.SecurityEventRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.6559366+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fintech.authservice.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.6565531+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fintech.authservice.repository.UserSessionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.6570556+05:30","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:47.8611517+05:30","level":"INFO","logger_name":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=f0adacb0-f3ab-3330-a040-3a1c7cab654a","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:48.3830158+05:30","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8081 (http)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:48.3914405+05:30","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:48.3924321+05:30","level":"INFO","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:48.4377024+05:30","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:48.4386982+05:30","level":"INFO","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1711 ms","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:48.8415044+05:30","level":"DEBUG","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.0103178+05:30","level":"INFO","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.0805463+05:30","level":"INFO","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.1143869+05:30","level":"INFO","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.4069451+05:30","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.4315797+05:30","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting...","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.5329879+05:30","level":"INFO","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77c66ac2","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.5352042+05:30","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed.","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.5759196+05:30","level":"WARN","logger_name":"org.hibernate.orm.deprecation","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:49.5948273+05:30","level":"INFO","logger_name":"org.hibernate.orm.connections.pooling","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 15.13\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.382028+05:30","level":"INFO","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.4417135+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create table auth_users (\r\n        id bigint generated by default as identity,\r\n        created_at timestamp(6) not null,\r\n        current_session_id varchar(255),\r\n        deleted_at timestamp(6),\r\n        email varchar(150) not null,\r\n        email_verification_token varchar(255),\r\n        email_verification_token_expires_at timestamp(6),\r\n        email_verified boolean not null,\r\n        failed_login_attempts integer not null,\r\n        last_login_at timestamp(6),\r\n        last_login_ip varchar(45),\r\n        last_login_user_agent varchar(500),\r\n        locked_until timestamp(6),\r\n        mfa_enabled boolean not null,\r\n        mfa_secret varchar(255),\r\n        password_changed_at timestamp(6),\r\n        password_hash varchar(255) not null,\r\n        password_must_change boolean not null,\r\n        password_strength integer not null,\r\n        preferred_mfa_method varchar(255) check (preferred_mfa_method in ('TOTP','SMS','EMAIL','HARDWARE_TOKEN')),\r\n        refresh_token_expires_at timestamp(6),\r\n        refresh_token_hash varchar(255),\r\n        refresh_token_version integer not null,\r\n        role varchar(255) not null check (role in ('ACCOUNT_HOLDER','SALES_PERSON','MANAGER','ADMIN','SYSTEM')),\r\n        salt varchar(255) not null,\r\n        session_expires_at timestamp(6),\r\n        shard_key integer not null,\r\n        status varchar(255) not null check (status in ('PENDING_VERIFICATION','ACTIVE','SUSPENDED','LOCKED','DISABLED','DELETED')),\r\n        updated_at timestamp(6) not null,\r\n        user_id varchar(36) not null,\r\n        primary key (id)\r\n    )","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.4612518+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create table security_events (\r\n        id bigint generated by default as identity,\r\n        correlation_id varchar(255),\r\n        description varchar(500),\r\n        device_fingerprint varchar(255),\r\n        event_type varchar(255) not null check (event_type in ('LOGIN_ATTEMPT','LOGIN_SUCCESS','LOGIN_FAILURE','LOGOUT','PASSWORD_CHANGE','PASSWORD_RESET_REQUEST','PASSWORD_RESET_COMPLETED','ACCOUNT_LOCKED','ACCOUNT_UNLOCKED','ACCOUNT_SUSPENDED','ACCOUNT_REACTIVATED','SESSION_CREATED','SESSION_EXPIRED','SESSION_REVOKED','CONCURRENT_SESSION_DETECTED','SUSPICIOUS_ACTIVITY','BRUTE_FORCE_DETECTED','UNUSUAL_LOCATION','NEW_DEVICE_LOGIN','MFA_ENABLED','MFA_DISABLED','MFA_VERIFICATION_SUCCESS','MFA_VERIFICATION_FAILURE','EMAIL_VERIFICATION_SENT','EMAIL_VERIFIED','EMAIL_CHANGED','TOKEN_ISSUED','TOKEN_REFRESHED','TOKEN_REVOKED','INVALID_TOKEN_USED','PERMISSION_DENIED','ROLE_CHANGED','PROFILE_VIEWED','PROFILE_UPDATED','SENSITIVE_DATA_ACCESSED')),\r\n        failure_reason varchar(100),\r\n        ip_address varchar(45),\r\n        location varchar(100),\r\n        metadata TEXT,\r\n        risk_level varchar(255) not null check (risk_level in ('LOW','MEDIUM','HIGH','CRITICAL')),\r\n        session_id varchar(255),\r\n        successful boolean not null,\r\n        timestamp timestamp(6) not null,\r\n        user_agent varchar(500),\r\n        user_id varchar(36) not null,\r\n        auth_user_id bigint not null,\r\n        primary key (id)\r\n    )","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.4719689+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create table user_profiles (\r\n        id bigint generated by default as identity,\r\n        address varchar(500),\r\n        allow_data_sharing boolean not null,\r\n        allow_third_party_marketing boolean not null,\r\n        alternate_phone_number varchar(20),\r\n        city varchar(100),\r\n        country varchar(50),\r\n        created_at timestamp(6) not null,\r\n        date_of_birth date not null,\r\n        deleted_at timestamp(6),\r\n        email_notification_enabled boolean not null,\r\n        employer varchar(100),\r\n        first_name varchar(50),\r\n        full_name varchar(100) not null,\r\n        gender varchar(255) check (gender in ('MALE','FEMALE','OTHER','PREFER_NOT_TO_SAY')),\r\n        last_name varchar(50),\r\n        last_profile_update timestamp(6),\r\n        marketing_opt_in boolean not null,\r\n        middle_name varchar(50),\r\n        national_id varchar(50),\r\n        national_id_expiry_date date,\r\n        national_id_type varchar(255) check (national_id_type in ('SSN','PASSPORT','DRIVERS_LICENSE','NATIONAL_ID','TAX_ID')),\r\n        occupation varchar(100),\r\n        phone_number varchar(20) not null,\r\n        postal_code varchar(20),\r\n        preferred_language varchar(10),\r\n        profile_completion_percentage integer not null,\r\n        profile_status varchar(255) not null check (profile_status in ('ACTIVE','INACTIVE','SUSPENDED','DELETED')),\r\n        sms_notification_enabled boolean not null,\r\n        state varchar(50),\r\n        timezone varchar(50),\r\n        updated_at timestamp(6) not null,\r\n        user_id varchar(36) not null,\r\n        verification_status varchar(255) not null check (verification_status in ('PENDING','UNDER_REVIEW','VERIFIED','REJECTED','REQUIRES_UPDATE')),\r\n        primary key (id)\r\n    )","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.4788693+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create table user_sessions (\r\n        id bigint generated by default as identity,\r\n        access_count integer not null,\r\n        created_at timestamp(6) not null,\r\n        device_fingerprint varchar(255),\r\n        device_type varchar(100),\r\n        expires_at timestamp(6) not null,\r\n        ip_address varchar(45),\r\n        is_trusted_device boolean not null,\r\n        last_accessed_at timestamp(6),\r\n        location varchar(100),\r\n        refresh_token_expires_at timestamp(6),\r\n        refresh_token_hash varchar(255),\r\n        session_id varchar(255) not null,\r\n        status varchar(255) not null check (status in ('ACTIVE','EXPIRED','REVOKED','SUSPICIOUS')),\r\n        terminated_at timestamp(6),\r\n        updated_at timestamp(6) not null,\r\n        user_agent varchar(500),\r\n        user_id varchar(36) not null,\r\n        auth_user_id bigint not null,\r\n        primary key (id)\r\n    )","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.486082+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_auth_user_shard_key \r\n       on auth_users (shard_key)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.4904944+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_auth_user_status \r\n       on auth_users (status)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.50077+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_auth_user_last_login \r\n       on auth_users (last_login_at)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5077652+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists auth_users \r\n       drop constraint if exists idx_auth_user_email","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5124325+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"SQL Warning Code: 0, SQLState: 00000","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5129538+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"constraint \"idx_auth_user_email\" of relation \"auth_users\" does not exist, skipping","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5141817+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists auth_users \r\n       add constraint idx_auth_user_email unique (email)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5173779+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists auth_users \r\n       drop constraint if exists idx_auth_user_id","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5189749+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"SQL Warning Code: 0, SQLState: 00000","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5189749+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"constraint \"idx_auth_user_id\" of relation \"auth_users\" does not exist, skipping","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5195295+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists auth_users \r\n       add constraint idx_auth_user_id unique (user_id)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5222327+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_security_user_id \r\n       on security_events (user_id)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5254689+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_security_event_type \r\n       on security_events (event_type)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.528164+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_security_timestamp \r\n       on security_events (timestamp)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5309486+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_security_ip_address \r\n       on security_events (ip_address)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5342084+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_security_risk_level \r\n       on security_events (risk_level)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5364012+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_security_session_id \r\n       on security_events (session_id)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5391188+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_profile_phone \r\n       on user_profiles (phone_number)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5413338+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_profile_status \r\n       on user_profiles (profile_status)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5437733+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_profile_verification \r\n       on user_profiles (verification_status)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5461019+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists user_profiles \r\n       drop constraint if exists idx_profile_user_id","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5477933+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"SQL Warning Code: 0, SQLState: 00000","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5477933+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"constraint \"idx_profile_user_id\" of relation \"user_profiles\" does not exist, skipping","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5477933+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists user_profiles \r\n       add constraint idx_profile_user_id unique (user_id)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5499895+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_session_user_id \r\n       on user_sessions (user_id)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5516707+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_session_status \r\n       on user_sessions (status)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5544518+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_session_expires_at \r\n       on user_sessions (expires_at)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5560822+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    create index idx_session_device_fingerprint \r\n       on user_sessions (device_fingerprint)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5583621+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists user_sessions \r\n       drop constraint if exists idx_session_id","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5595141+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"SQL Warning Code: 0, SQLState: 00000","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5595141+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"constraint \"idx_session_id\" of relation \"user_sessions\" does not exist, skipping","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5595141+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists user_sessions \r\n       add constraint idx_session_id unique (session_id)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.5616461+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists security_events \r\n       add constraint FKg42inmbt5mkq7bwl7u85h4d0c \r\n       foreign key (auth_user_id) \r\n       references auth_users","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.565303+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\r\n    alter table if exists user_sessions \r\n       add constraint FK1g71600lcdfhp8i8vaj7gacr6 \r\n       foreign key (auth_user_id) \r\n       references auth_users","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:50.568192+05:30","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:51.1330253+05:30","level":"INFO","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:52.1447872+05:30","level":"WARN","logger_name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","message":"\r\n\r\nUsing generated security password: bdaf0ed5-21e1-4016-8f8f-88cd3e54d9a3\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:52.1530265+05:30","level":"INFO","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:52.2839719+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"10 mappings in 'requestMappingHandlerMapping'","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:52.3543322+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**] in 'resourceHandlerMapping'","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:52.9755548+05:30","level":"INFO","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 29 endpoints beneath base path '/actuator'","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:53.0737211+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.DefaultSecurityFilterChain","message":"Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:53.2375169+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:53.3202198+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:54.1241565+05:30","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8081 (http) with context path '/'","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:54.9890554+05:30","level":"INFO","logger_name":"com.fintech.authservice.AuthServiceApplication","message":"Started AuthServiceApplication in 9.483 seconds (process running for 10.009)","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5224266+05:30","level":"INFO","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","message":"Attempting to connect to: [localhost:5672]","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5234259+05:30","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5234259+05:30","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Initializing Servlet 'dispatcherServlet'","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5244293+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Detected StandardServletMultipartResolver","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5251902+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Detected AcceptHeaderLocaleResolver","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5251902+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Detected FixedThemeResolver","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5278122+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@24206c55","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5283395+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Detected org.springframework.web.servlet.support.SessionFlashMapManager@1a49f8b8","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5288605+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.529904+05:30","level":"INFO","logger_name":"org.springframework.web.servlet.DispatcherServlet","message":"Completed initialization in 5 ms","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:50:55.5965877+05:30","level":"INFO","logger_name":"org.springframework.amqp.rabbit.connection.CachingConnectionFactory","message":"Created new connection: rabbitConnectionFactory#4182abba:0/SimpleConnection@1160fa7b [delegate=amqp://guest@127.0.0.1:5672/, localPort=61558]","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:07.0185356+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ad29ce9828683ff9","message":"Securing GET /actuator/prometheus","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ad29ce9828683ff9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:07.0403679+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"63ad80cd159c0dbd","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"63ad80cd159c0dbd","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:07.0515114+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","message":"Secured GET /actuator/prometheus","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:07.0545965+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:07.0763295+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","message":"Read \"application/octet-stream\" to []","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:08.1321544+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:08.1414122+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:08.1469278+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","message":"Completed 200 OK","traceId":"4efe125cdbf9f6c007dd9fff92ec9f9a","spanId":"ebeb5ae36b4106b5","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:15.3391205+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"9d9450cb3da772e2","message":"Securing GET /api/auth/health","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"9d9450cb3da772e2","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:15.3417107+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"d28e0752b83bcc85","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"d28e0752b83bcc85","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:15.3447433+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","message":"Secured GET /api/auth/health","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:15.3452824+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","message":"GET \"/api/auth/health\", parameters={}","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:15.3470083+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","message":"Mapped to com.fintech.authservice.controller.AuthController#health()","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:15.3508996+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","message":"Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:15.3514513+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","message":"Writing [\"Auth Service is running\"]","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:15.3526805+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","message":"Completed 200 OK","traceId":"e747b2c35afd00c4e0889d1c2f1852b4","spanId":"01259330935ede8d","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:21.8629766+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"9febcdd988177945","message":"Securing GET /actuator/prometheus","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"9febcdd988177945","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:21.8647662+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"95ac0b6549c81ea9","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"95ac0b6549c81ea9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:21.8664006+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","message":"Secured GET /actuator/prometheus","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:21.8669154+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:21.867969+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","message":"Read \"application/octet-stream\" to []","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:21.9824964+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:21.9900766+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:21.992237+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","message":"Completed 200 OK","traceId":"7896e352f39225d0528a7e98a0fc70b4","spanId":"e7ffcd02e9edfb38","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:36.8624273+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"92437f85d77ca8b8","message":"Securing GET /actuator/prometheus","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"92437f85d77ca8b8","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:36.8641739+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"0ececa46dac63b8e","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"0ececa46dac63b8e","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:36.8653215+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","message":"Secured GET /actuator/prometheus","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:36.8659321+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:36.8672249+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","message":"Read \"application/octet-stream\" to []","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:36.9873527+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:36.9934254+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:36.9950361+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","message":"Completed 200 OK","traceId":"2d57a35172d1932722dacd22c81deaad","spanId":"fe3de49296c88ca9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:51.8619282+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"f226b727ceaf8821","message":"Securing GET /actuator/prometheus","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"f226b727ceaf8821","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:51.8643277+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"34723ee57ef9b512","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"34723ee57ef9b512","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:51.8672488+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","message":"Secured GET /actuator/prometheus","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:51.868452+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:51.8705677+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","message":"Read \"application/octet-stream\" to []","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:51.9863423+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:51.9956687+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:51:51.9974102+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","message":"Completed 200 OK","traceId":"29b4a5ee5b8dd37c2e00addbda345d9d","spanId":"b864717e7de04c68","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:06.8605399+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"8ae73b795630a042","message":"Securing GET /actuator/prometheus","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"8ae73b795630a042","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:06.8634307+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"db6629270d6937d2","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"db6629270d6937d2","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:06.8645871+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","message":"Secured GET /actuator/prometheus","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:06.8652451+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:06.8670253+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","message":"Read \"application/octet-stream\" to []","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:06.9829547+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:06.9905178+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:06.9918998+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","message":"Completed 200 OK","traceId":"d831b1c8aa302c7c4991ff8a94e70504","spanId":"1d85553255b9a2eb","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:21.8578577+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"f22fcf77c4e85150","message":"Securing GET /actuator/prometheus","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"f22fcf77c4e85150","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:21.8594762+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"302cfde3f02116c5","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"302cfde3f02116c5","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:21.8606621+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","message":"Secured GET /actuator/prometheus","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:21.8612025+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:21.8618238+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","message":"Read \"application/octet-stream\" to []","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:21.9679665+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:21.9740837+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:21.9751207+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","message":"Completed 200 OK","traceId":"e772989e2ace9f5592a984455f02d446","spanId":"7afc0d40bba9f7d7","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:36.855685+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"573d48aec26ba903","message":"Securing GET /actuator/prometheus","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"573d48aec26ba903","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:36.8571701+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"56d0bc2091b6f5a9","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"56d0bc2091b6f5a9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:36.8579577+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","message":"Secured GET /actuator/prometheus","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:36.8579577+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:36.8587463+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","message":"Read \"application/octet-stream\" to []","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:36.9091332+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:36.9121367+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:36.913426+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","message":"Completed 200 OK","traceId":"97e469a3c9d031add68c66e108ce848d","spanId":"105f985405b06385","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:39.9897773+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"d05c3fa8322c3fb9","message":"Securing POST /api/auth/register","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"d05c3fa8322c3fb9","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:39.9908265+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"e49654121287c5c0","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"e49654121287c5c0","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:39.9913638+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"Secured POST /api/auth/register","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:39.9918848+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"POST \"/api/auth/register\", parameters={}","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:39.9924296+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"Mapped to com.fintech.authservice.controller.AuthController#register(RegistrationRequest, HttpServletRequest)","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:39.9973793+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"Read \"application/json;charset=UTF-8\" to [com.fintech.authservice.dto.RegistrationRequest@b28ffce]","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.1007245+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"\r\n    /* <criteria> */ select\r\n        au1_0.id \r\n    from\r\n        auth_users au1_0 \r\n    where\r\n        au1_0.email=? \r\n    fetch\r\n        first ? rows only","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.3782346+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"\r\n    /* insert for\r\n        com.fintech.authservice.entity.AuthUser */insert \r\n    into\r\n        auth_users (created_at, current_session_id, deleted_at, email, email_verification_token, email_verification_token_expires_at, email_verified, failed_login_attempts, last_login_at, last_login_ip, last_login_user_agent, locked_until, mfa_enabled, mfa_secret, password_changed_at, password_hash, password_must_change, password_strength, preferred_mfa_method, refresh_token_expires_at, refresh_token_hash, refresh_token_version, role, salt, session_expires_at, shard_key, status, updated_at, user_id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.3998569+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"\r\n    /* insert for\r\n        com.fintech.authservice.entity.UserProfile */insert \r\n    into\r\n        user_profiles (address, allow_data_sharing, allow_third_party_marketing, alternate_phone_number, city, country, created_at, date_of_birth, deleted_at, email_notification_enabled, employer, first_name, full_name, gender, last_name, last_profile_update, marketing_opt_in, middle_name, national_id, national_id_expiry_date, national_id_type, occupation, phone_number, postal_code, preferred_language, profile_completion_percentage, profile_status, sms_notification_enabled, state, timezone, updated_at, user_id, verification_status) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.4059501+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"\r\n    /* insert for\r\n        com.fintech.authservice.entity.SecurityEvent */insert \r\n    into\r\n        security_events (auth_user_id, correlation_id, description, device_fingerprint, event_type, failure_reason, ip_address, location, metadata, risk_level, session_id, successful, timestamp, user_agent, user_id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.4131959+05:30","level":"DEBUG","logger_name":"org.springframework.web.client.RestTemplate","message":"HTTP POST http://localhost:8088/services/collector","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.4138029+05:30","level":"DEBUG","logger_name":"org.springframework.web.client.RestTemplate","message":"Accept=[text/plain, application/json, application/*+json, */*]","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.4145012+05:30","level":"DEBUG","logger_name":"org.springframework.web.client.RestTemplate","message":"Writing [{\"index\":\"fintech-dev\",\"sourcetype\":\"json\",\"time\":1754216560,\"source\":\"auth-service\",\"event\":{\"device_fingerprint\":null,\"description\":\"User registered successfully\",\"session_id\":null,\"ip_address\":\"0:0:0:0:0:0:0:1\",\"failure_reason\":null,\"risk_level\":\"LOW\",\"environment\":\"dev\",\"event_type\":\"LOGIN_SUCCESS\",\"event_id\":\"bbd58e7e-3218-4349-bc1b-0fcbbd6cef53\",\"user_id\":\"16f43858-1ab6-444c-bd0a-93e9f7980ff6\",\"service\":\"auth-service\",\"correlation_id\":\"872441c1-4dc7-4539-b3a4-f894ecebc310\",\"location\":null,\"user_agent\":\"PostmanRuntime/7.45.0\",\"successful\":true,\"timestamp\":\"2025-08-03T15:52:40.40595\"}}] as \"application/json\"","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.4237198+05:30","level":"DEBUG","logger_name":"org.springframework.web.client.RestTemplate","message":"Response 400 BAD_REQUEST","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.4283293+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json]","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.4288963+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"Writing [com.fintech.authservice.dto.AuthResponse@1d36f566]","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:40.4330248+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","message":"Completed 200 OK","traceId":"631d770bd1064743c50856b9edf46f0a","spanId":"cf4fcb818236dd55","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:51.8553413+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"25c7de7805bc5899","message":"Securing GET /actuator/prometheus","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"25c7de7805bc5899","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:51.8570503+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"45cc9b41a6fcde07","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"45cc9b41a6fcde07","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:51.8581578+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","message":"Secured GET /actuator/prometheus","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:51.8587264+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:51.8593002+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","message":"Read \"application/octet-stream\" to []","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:51.9796564+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:51.9956533+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:52:51.9979323+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","message":"Completed 200 OK","traceId":"11cf265cfbd2648db8c6c6e6ce3690ec","spanId":"50de6d7bc7be6ebc","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:06.854539+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"c8b0789aa43dca4d","message":"Securing GET /actuator/prometheus","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"c8b0789aa43dca4d","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:06.8555507+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"6db53a7771423083","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"6db53a7771423083","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:06.8575484+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","message":"Secured GET /actuator/prometheus","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:06.8575484+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:06.8585529+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","message":"Read \"application/octet-stream\" to []","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:06.9729357+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:06.9851012+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:06.9876878+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","message":"Completed 200 OK","traceId":"910f8fa4329d2f47989f4c8ae86ca7f0","spanId":"0d44f082e9250da3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.7198225+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"d0459b0f9286b985","message":"Securing POST /api/auth/login","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"d0459b0f9286b985","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.7212684+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"1cdc94008cbf8178","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"1cdc94008cbf8178","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.7218037+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Secured POST /api/auth/login","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.7223274+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"POST \"/api/auth/login\", parameters={}","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.723389+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Mapped to com.fintech.authservice.controller.AuthController#login(LoginRequest, HttpServletRequest)","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.7255359+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Read \"application/json;charset=UTF-8\" to [com.fintech.authservice.dto.LoginRequest@14e22f23]","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.7909438+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"\r\n    /* SELECT\r\n        u \r\n    FROM\r\n        AuthUser u \r\n    WHERE\r\n        u.email = :email \r\n        AND u.status = 'ACTIVE' \r\n        AND u.deletedAt IS NULL */ select\r\n            au1_0.id,\r\n            au1_0.created_at,\r\n            au1_0.current_session_id,\r\n            au1_0.deleted_at,\r\n            au1_0.email,\r\n            au1_0.email_verification_token,\r\n            au1_0.email_verification_token_expires_at,\r\n            au1_0.email_verified,\r\n            au1_0.failed_login_attempts,\r\n            au1_0.last_login_at,\r\n            au1_0.last_login_ip,\r\n            au1_0.last_login_user_agent,\r\n            au1_0.locked_until,\r\n            au1_0.mfa_enabled,\r\n            au1_0.mfa_secret,\r\n            au1_0.password_changed_at,\r\n            au1_0.password_hash,\r\n            au1_0.password_must_change,\r\n            au1_0.password_strength,\r\n            au1_0.preferred_mfa_method,\r\n            au1_0.refresh_token_expires_at,\r\n            au1_0.refresh_token_hash,\r\n            au1_0.refresh_token_version,\r\n            au1_0.role,\r\n            au1_0.salt,\r\n            au1_0.session_expires_at,\r\n            au1_0.shard_key,\r\n            au1_0.status,\r\n            au1_0.updated_at,\r\n            au1_0.user_id \r\n        from\r\n            auth_users au1_0 \r\n        where\r\n            au1_0.email=? \r\n            and au1_0.status='ACTIVE' \r\n            and au1_0.deleted_at is null","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.8293066+05:30","level":"DEBUG","logger_name":"org.hibernate.SQL","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"\r\n    /* insert for\r\n        com.fintech.authservice.entity.SecurityEvent */insert \r\n    into\r\n        security_events (auth_user_id, correlation_id, description, device_fingerprint, event_type, failure_reason, ip_address, location, metadata, risk_level, session_id, successful, timestamp, user_agent, user_id) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.8394746+05:30","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"SQL Error: 0, SQLState: 23502","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.8400328+05:30","level":"ERROR","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"ERROR: null value in column \"user_id\" of relation \"security_events\" violates not-null constraint\n  Detail: Failing row contains (2, 18ab7395-65de-47a8-a9ff-be67861e9825, Login attempt with non-existent email, null, LOGIN_FAILURE, null, 0:0:0:0:0:0:0:1, null, null, MEDIUM, null, f, 2025-08-03 15:53:10.829306, PostmanRuntime/7.45.0, null, null).","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.8605907+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Using @ExceptionHandler com.fintech.authservice.exception.GlobalExceptionHandler#handleGenericException(Exception, HttpServletRequest)","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.8637154+05:30","level":"ERROR","logger_name":"com.fintech.authservice.exception.GlobalExceptionHandler","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Unexpected error [traceId: ebcff71b19714bb6]: could not execute statement [ERROR: null value in column \"user_id\" of relation \"security_events\" violates not-null constraint\n  Detail: Failing row contains (2, 18ab7395-65de-47a8-a9ff-be67861e9825, Login attempt with non-existent email, null, LOGIN_FAILURE, null, 0:0:0:0:0:0:0:1, null, null, MEDIUM, null, f, 2025-08-03 15:53:10.829306, PostmanRuntime/7.45.0, null, null).] [/* insert for com.fintech.authservice.entity.SecurityEvent */insert into security_events (auth_user_id,correlation_id,description,device_fingerprint,event_type,failure_reason,ip_address,location,metadata,risk_level,session_id,successful,timestamp,user_agent,user_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.fintech.authservice.entity.SecurityEvent */insert into security_events (auth_user_id,correlation_id,description,device_fingerprint,event_type,failure_reason,ip_address,location,metadata,risk_level,session_id,successful,timestamp,user_agent,user_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [user_id\" of relation \"security_events] for request: /api/auth/login","stack_trace":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: null value in column \"user_id\" of relation \"security_events\" violates not-null constraint\n  Detail: Failing row contains (2, 18ab7395-65de-47a8-a9ff-be67861e9825, Login attempt with non-existent email, null, LOGIN_FAILURE, null, 0:0:0:0:0:0:0:1, null, null, MEDIUM, null, f, 2025-08-03 15:53:10.829306, PostmanRuntime/7.45.0, null, null).] [/* insert for com.fintech.authservice.entity.SecurityEvent */insert into security_events (auth_user_id,correlation_id,description,device_fingerprint,event_type,failure_reason,ip_address,location,metadata,risk_level,session_id,successful,timestamp,user_agent,user_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.fintech.authservice.entity.SecurityEvent */insert into security_events (auth_user_id,correlation_id,description,device_fingerprint,event_type,failure_reason,ip_address,location,metadata,risk_level,session_id,successful,timestamp,user_agent,user_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [user_id\" of relation \"security_events]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy2/jdk.proxy2.$Proxy186.save(Unknown Source)\r\n\tat com.fintech.authservice.service.SecurityEventService.logSecurityEvent(SecurityEventService.java:62)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)\r\n\tat com.fintech.authservice.service.SecurityEventService$$SpringCGLIB$$0.logSecurityEvent(<generated>)\r\n\tat com.fintech.authservice.service.AuthService.login(AuthService.java:144)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)\r\n\tat com.fintech.authservice.service.AuthService$$SpringCGLIB$$0.login(<generated>)\r\n\tat com.fintech.authservice.controller.AuthController.login(AuthController.java:65)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:842)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: null value in column \"user_id\" of relation \"security_events\" violates not-null constraint\n  Detail: Failing row contains (2, 18ab7395-65de-47a8-a9ff-be67861e9825, Login attempt with non-existent email, null, LOGIN_FAILURE, null, 0:0:0:0:0:0:0:1, null, null, MEDIUM, null, f, 2025-08-03 15:53:10.829306, PostmanRuntime/7.45.0, null, null).] [/* insert for com.fintech.authservice.entity.SecurityEvent */insert into security_events (auth_user_id,correlation_id,description,device_fingerprint,event_type,failure_reason,ip_address,location,metadata,risk_level,session_id,successful,timestamp,user_agent,user_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]\r\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:97)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy2/jdk.proxy2.$Proxy178.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 161 common frames omitted\r\nCaused by: org.postgresql.util.PSQLException: ERROR: null value in column \"user_id\" of relation \"security_events\" violates not-null constraint\n  Detail: Failing row contains (2, 18ab7395-65de-47a8-a9ff-be67861e9825, Login attempt with non-existent email, null, LOGIN_FAILURE, null, 0:0:0:0:0:0:0:1, null, null, MEDIUM, null, f, 2025-08-03 15:53:10.829306, PostmanRuntime/7.45.0, null, null).\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)\r\n\tat org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)\r\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:194)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:155)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 211 common frames omitted\r\n","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.8793281+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json]","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.879855+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Writing [com.fintech.authservice.exception.GlobalExceptionHandler$ErrorResponse@27f168a2]","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.8820988+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: null value in column \"user_id\" of relation \"security_events\" violates not-null constraint<EOL>  Detail: Failing row contains (2, 18ab7395-65de-47a8-a9ff-be67861e9825, Login attempt with non-existent email, null, LOGIN_FAILURE, null, 0:0:0:0:0:0:0:1, null, null, MEDIUM, null, f, 2025-08-03 15:53:10.829306, PostmanRuntime/7.45.0, null, null).] [/* insert for com.fintech.authservice.entity.SecurityEvent */insert into security_events (auth_user_id,correlation_id,description,device_fingerprint,event_type,failure_reason,ip_address,location,metadata,risk_level,session_id,successful,timestamp,user_agent,user_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for com.fintech.authservice.entity.SecurityEvent */insert into security_events (auth_user_id,correlation_id,description,device_fingerprint,event_type,failure_reason,ip_address,location,metadata,risk_level,session_id,successful,timestamp,user_agent,user_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [user_id\" of relation \"security_events]]","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:10.8826158+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","message":"Completed 500 INTERNAL_SERVER_ERROR","traceId":"4d6c63e7cc48971bfedce6c79a369fc4","spanId":"295bc7170e864475","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:21.8529537+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"c1b0f5ee2ad4763d","message":"Securing GET /actuator/prometheus","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"c1b0f5ee2ad4763d","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:21.8545271+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"e4c3d69b21465872","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"e4c3d69b21465872","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:21.8566869+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","message":"Secured GET /actuator/prometheus","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:21.8577849+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:21.8589646+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","message":"Read \"application/octet-stream\" to []","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:21.9838377+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:22.0034841+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:22.0054111+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","message":"Completed 200 OK","traceId":"9c88bf1e01e129b44e42dc3f330a0288","spanId":"3bc4c6511ee1cec3","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.8532809+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"6b666d53906065e5179fabf78345437c","spanId":"3e63e1984405cec7","message":"Securing GET /actuator/prometheus","traceId":"6b666d53906065e5179fabf78345437c","spanId":"3e63e1984405cec7","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.8553001+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.authentication.AnonymousAuthenticationFilter","traceId":"6b666d53906065e5179fabf78345437c","spanId":"dbe42782f84856aa","message":"Set SecurityContextHolder to anonymous SecurityContext","traceId":"6b666d53906065e5179fabf78345437c","spanId":"dbe42782f84856aa","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.8562969+05:30","level":"DEBUG","logger_name":"org.springframework.security.web.FilterChainProxy","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","message":"Secured GET /actuator/prometheus","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.8580277+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","message":"GET \"/actuator/prometheus\", parameters={}","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.8596047+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","message":"Read \"application/octet-stream\" to []","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.9132349+05:30","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Commencing graceful shutdown. Waiting for active requests to complete","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.9279568+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","message":"Found 'Content-Type:application/openmetrics-text;version=1.0.0;charset=utf-8' in response","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.9343808+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","message":"Writing [{35, 32, 84, 89, 80, 69, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 95, 114, 101, 97, 1 (truncated)...]","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:36.9351693+05:30","level":"DEBUG","logger_name":"org.springframework.web.servlet.DispatcherServlet","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","message":"Completed 200 OK","traceId":"6b666d53906065e5179fabf78345437c","spanId":"37f256d041de3112","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:37.0260767+05:30","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Graceful shutdown complete","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:37.0604735+05:30","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:37.0637031+05:30","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated...","traceId":"","spanId":"","service":"auth-service","environment":"development"}
{"@timestamp":"2025-08-03T15:53:37.0649188+05:30","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed.","traceId":"","spanId":"","service":"auth-service","environment":"development"}
