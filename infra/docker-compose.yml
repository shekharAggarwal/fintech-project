
version: "3.8"
services:
  grafana:
    image: grafana/grafana:10.4.2
    container_name: fintech_grafana
    networks:
      - fintech_net
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/fintech-monitoring-dashboard.json:/etc/grafana/provisioning/dashboards/fintech-monitoring-dashboard.json
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
      - jaeger

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: fintech_prometheus
    networks:
      - fintech_net
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  postgres:
    image: postgres:15
    container_name: fintech_postgres
    networks:
      - fintech_net
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: fintech_redis
    networks:
      - fintech_net
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: fintech_zookeeper
    networks:
      - fintech_net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: fintech_kafka
    networks:
      - fintech_net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:${KAFKA_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  rabbitmq:
    image: rabbitmq:3-management
    container_name: fintech_rabbitmq
    networks:
      - fintech_net
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: fintech_jaeger
    networks:
      - fintech_net
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "4317:4317"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  splunk:
    image: splunk/splunk:9.1.2
    container_name: fintech_splunk
    networks:
      - fintech_net
    ports:
      - "8000:8000"
      - "8088:8088"
      - "8089:8089"
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_PASSWORD: ${SPLUNK_PASSWORD}
      SPLUNK_HEC_TOKEN: ${SPLUNK_HEC_TOKEN}
      SPLUNK_APPS_URL: ""
      SPLUNK_ENABLE_LISTEN: 9997
      SPLUNK_ADD: "tcp 1514"
      SPLUNK_CMD: "enable listen 9997 -auth admin:${SPLUNK_PASSWORD}"
      SPLUNK_CMD_1: "add tcp 1514 -auth admin:${SPLUNK_PASSWORD}"
      SPLUNK_CMD_2: "http-event-collector enable -auth admin:${SPLUNK_PASSWORD}"
      SPLUNK_CMD_3: "http-event-collector create fintech-hec -token ${SPLUNK_HEC_TOKEN} -index main -auth admin:${SPLUNK_PASSWORD}"
    volumes:
      - splunk-data:/opt/splunk/var
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  config-server:
    build:
      context: ../services/config-server
    container_name: fintech_config_server
    networks:
      - fintech_net
    depends_on:
      - postgres
    environment:
      - CONFIG_REPO_PATH=file:/app/config-repo
    volumes:
      - ../services/config-repo/default:/app/config-repo:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 30

  gateway-service:
    build:
      context: ../services/gateway-service
    container_name: fintech_gateway_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8081:8081"
    volumes:
      - ../certs:/app/certs:ro
    environment:
      - SSL_KEYSTORE_PATH=${SSL_KEYSTORE_PATH}
      - SSL_KEYSTORE_PASSWORD=${SSL_KEYSTORE_PASSWORD}
      - SSL_KEYSTORE_TYPE=${SSL_KEYSTORE_TYPE}
      - SSL_KEY_ALIAS=${SSL_KEY_ALIAS}
      - JWT_PUBLIC_CERT_PATH=${JWT_PUBLIC_CERT_PATH}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - JWT_KEYSTORE_PATH=${JWT_KEYSTORE_PATH}
      - JWT_KEYSTORE_PASSWORD=${JWT_KEYSTORE_PASSWORD}
      - JWT_KEY_ALIAS=${JWT_KEY_ALIAS}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  authorization-service:
    build:
      context: ../services/authorization-service
    container_name: fintech_authorization_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    volumes:
      - ../certs:/app/certs:ro
    environment:
      - JWT_PUBLIC_CERT_PATH=${JWT_PUBLIC_CERT_PATH}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - JWT_KEYSTORE_PATH=${JWT_KEYSTORE_PATH}
      - JWT_KEYSTORE_PASSWORD=${JWT_KEYSTORE_PASSWORD}
      - JWT_KEY_ALIAS=${JWT_KEY_ALIAS}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  auth-service:
    build:
      context: ../services/auth-service
    container_name: fintech_auth_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    volumes:
      - ../certs:/app/certs:ro
    environment:
      - JWT_KEYSTORE_PATH=${JWT_KEYSTORE_PATH}
      - JWT_KEYSTORE_PASSWORD=${JWT_KEYSTORE_PASSWORD}
      - JWT_KEY_ALIAS=${JWT_KEY_ALIAS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  payment-service:
    build:
      context: ../services/payment-service
    container_name: fintech_payment_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - JAEGER_OTLP_PORT=${JAEGER_OTLP_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_PORT=${SPLUNK_PORT}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_HEC_TOKEN=${SPLUNK_HEC_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  notification-service:
    build:
      context: ../services/notification-service
    container_name: fintech_notification_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  reporting-service:
    build:
      context: ../services/reporting-service
    container_name: fintech_reporting_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  retry-service:
    build:
      context: ../services/retry-service
    container_name: fintech_retry_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  scheduler-service:
    build:
      context: ../services/scheduler-service
    container_name: fintech_scheduler_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  transaction-service:
    build:
      context: ../services/transaction-service
    container_name: fintech_transaction_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  user-service:
    build:
      context: ../services/user-service
    container_name: fintech_user_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SPRING_REDIS_HOST=${SPRING_REDIS_HOST}
      - SPRING_REDIS_PORT=${SPRING_REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
      - ZOOKEEPER_PORT=${ZOOKEEPER_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_MANAGEMENT_PORT=${RABBITMQ_MANAGEMENT_PORT}
      - EUREKA_HOST=${EUREKA_HOST}
      - JAEGER_HOST=${JAEGER_HOST}
      - JAEGER_PORT=${JAEGER_PORT}
      - SPLUNK_HOST=${SPLUNK_HOST}
      - SPLUNK_TOKEN=${SPLUNK_TOKEN}
      - SPLUNK_WEB_PORT=${SPLUNK_WEB_PORT}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
networks:
  fintech_net:
    driver: bridge

volumes:
  postgres-data:
  splunk-data:
  prometheus-data:
  grafana-data:
