version: "3.8"
services:

  postgres:
    image: postgres:15
    container_name: fintech_postgres
    networks:
      - fintech_net
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: fintech_redis
    networks:
      - fintech_net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: fintech_zookeeper
    networks:
      - fintech_net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: fintech_kafka
    networks:
      - fintech_net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:${KAFKA_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  rabbitmq:
    image: rabbitmq:3-management
    container_name: fintech_rabbitmq
    networks:
      - fintech_net
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: fintech_jaeger
    networks:
      - fintech_net

  splunk:
    image: splunk/splunk:8.2.2
    container_name: fintech_splunk
    networks:
      - fintech_net
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_PASSWORD: ${SPLUNK_PASSWORD}
      SPLUNK_HEC_TOKEN: ${SPLUNK_HEC_TOKEN}

  config-server:
    build:
      context: ../services/config-server
    container_name: fintech_config_server
    networks:
      - fintech_net
    depends_on:
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - CONFIG_REPO_PATH=file:/app/config-repo
    volumes:
      - ../services/config-repo:/app/config-repo:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 30

  gateway-service:
    build:
      context: ../services/gateway-service
    container_name: fintech_gateway_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8081:8081"
    volumes:
      - ../certs:/app/certs:ro
    environment:
      - SSL_KEYSTORE_PASSWORD=${SSL_KEYSTORE_PASSWORD}

  auth-service:
    build:
      context: ../services/auth-service
    container_name: fintech_auth_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy

  payment-service:
    build:
      context: ../services/payment-service
    container_name: fintech_payment_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy

  notification-service:
    build:
      context: ../services/notification-service
    container_name: fintech_notification_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy

  reporting-service:
    build:
      context: ../services/reporting-service
    container_name: fintech_reporting_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy

  retry-service:
    build:
      context: ../services/retry-service
    container_name: fintech_retry_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy

  scheduler-service:
    build:
      context: ../services/scheduler-service
    container_name: fintech_scheduler_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy

  transaction-service:
    build:
      context: ../services/transaction-service
    container_name: fintech_transaction_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy

  user-service:
    build:
      context: ../services/user-service
    container_name: fintech_user_service
    networks:
      - fintech_net
    depends_on:
      config-server:
        condition: service_healthy
networks:
  fintech_net:
    driver: bridge

volumes:
  postgres-data:
